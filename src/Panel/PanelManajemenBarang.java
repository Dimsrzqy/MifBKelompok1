/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Panel;

import Form.FormMenuUtama;
import Form.connect;
import java.awt.CardLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

/**
 *
 * @author TOSHIBA
 */
public class PanelManajemenBarang extends javax.swing.JPanel {

    /**
     * Creates new form PanelManajemenBarang
     */
    public PanelManajemenBarang() {
        initComponents();
          tampilkanDataBarang();

    }
    
    public class Koneksi {
    public static Connection getConnection() {
        Connection conn = null;
        try {
            String url = "jdbc:mysql://localhost:3306/koperasi_nuris";
            String user = "root"; // atau user lain
            String pass = "";     // password MySQL kamu

            conn = DriverManager.getConnection(url, user, pass);
        } catch (SQLException e) {
            System.out.println("Koneksi gagal: " + e.getMessage());
        }
        return conn;
    }
}
    
    private void tampilkanDataBarang() {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("No");
    model.addColumn("ID Barang");
    model.addColumn("Kategori");
    model.addColumn("Nama Barang");
    model.addColumn("Harga Beli");
    model.addColumn("Harga Jual");
    model.addColumn("Tanggal Kadaluarsa");
    model.addColumn("Tanggal Masuk");
    model.addColumn("Barcode");

    try {
        int no = 1;

        String sql = "SELECT b.IDBarang, k.NamaKategori AS Kategori, b.NamaBarang, b.HargaBeli, b.HargaJual, b.TanggalMasuk, b.Barcode, " +
                     "MAX(s.TanggalKadaluarsa) AS TanggalKadaluarsa " +
                     "FROM barang b " +
                     "JOIN kategori k ON b.IDKategori = k.IDKategori " +
                     "LEFT JOIN stok s ON b.IDBarang = s.IDBarang " +
                     "GROUP BY b.IDBarang";

        Connection conn = connect.getConnection();
        PreparedStatement pst = conn.prepareStatement(sql);
        ResultSet res = pst.executeQuery();

        while (res.next()) {
            String tanggalKadaluarsa = "-";
            Date tgl = res.getDate("TanggalKadaluarsa");
            if (tgl != null) {
                tanggalKadaluarsa = tgl.toString(); // atau format pakai SimpleDateFormat kalau mau
            }

            model.addRow(new Object[]{
                no++,
                res.getString("IDBarang"),
                res.getString("Kategori"),
                res.getString("NamaBarang"),
                res.getDouble("HargaBeli"),
                res.getDouble("HargaJual"),
                tanggalKadaluarsa,
                res.getString("TanggalMasuk"),
                res.getString("Barcode")
            });
        }

        tabel_barang.setModel(model);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Gagal menampilkan data barang: " + e.getMessage());
        e.printStackTrace();
    }
}


    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_barang = new javax.swing.JTable();
        BtnHapus = new javax.swing.JButton();
        edit = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tabel_barang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nama Barang", "Kategori", "Harga Beli", "Harga Jual", "Kadaluarsa", "Tanggal masuk", "Barcode"
            }
        ));
        jScrollPane1.setViewportView(tabel_barang);

        BtnHapus.setBackground(new java.awt.Color(255, 0, 0));
        BtnHapus.setText("Hapus");
        BtnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHapusActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(255, 255, 0));
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnHapus, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(edit, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(edit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnHapus)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHapusActionPerformed
                                     
    // Pastikan ada baris yang dipilih di tabel
    int selectedRow = tabel_barang.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, 
            "Pilih barang yang akan dihapus terlebih dahulu!", 
            "Peringatan", 
            JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Konfirmasi penghapusan
    int confirm = JOptionPane.showConfirmDialog(
        this, 
        "Apakah Anda yakin ingin menghapus barang ini?", 
        "Konfirmasi Hapus", 
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE);
    
    if (confirm != JOptionPane.YES_OPTION) {
        return;
    }

    // Ambil ID Barang dari kolom yang benar (kolom 1)
    String idBarang = tabel_barang.getValueAt(selectedRow, 1).toString();

    try {
        // Query hapus data
        String sql = "DELETE FROM barang WHERE IDBarang = ?";
        
        try (Connection conn = Koneksi.getConnection();
             PreparedStatement pst = conn.prepareStatement(sql)) {
            
            pst.setString(1, idBarang);
            int affectedRows = pst.executeUpdate();
            
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, 
                    "Data barang berhasil dihapus!", 
                    "Sukses", 
                    JOptionPane.INFORMATION_MESSAGE);
                // Refresh tabel setelah penghapusan
                tampilkanDataBarang();
            } else {
                JOptionPane.showMessageDialog(this, 
                    "Data barang tidak ditemukan!", 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    } catch (SQLIntegrityConstraintViolationException e) {
        JOptionPane.showMessageDialog(this, 
            "Tidak dapat menghapus karena data digunakan di tabel lain", 
            "Constraint Violation", 
            JOptionPane.ERROR_MESSAGE);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, 
            "Error database: " + e.getMessage(), 
            "Database Error", 
            JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, 
            "Error: " + e.getMessage(), 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_BtnHapusActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
  
    }//GEN-LAST:event_editActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnHapus;
    private javax.swing.JButton edit;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabel_barang;
    // End of variables declaration//GEN-END:variables
}
